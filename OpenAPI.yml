openapi: '3.0.3'
info:
  title: 'Project#2 Alta-BE4: Airbnb App'
  version: '1.1'
  description: 'OpenAPI for Project Airbnb App'
  contact: 
    name: Moch. Syahryil Mahendra
    email: nurilhuda7337@gmail.com
    url: https://github.com/sahrilmahendra
servers:
  - url: https://{environment}.server.test/api/v1
    description: SwaggerHub API Auto Mocking
    variables:
      environment:
        default: dev
        enum: [
          dev,
          prod
        ]
externalDocs: 
  description: "Repository Github Project#2 Airbnb App"
  url: https://github.com/sahrilmahendra/project2-airbnb
tags:
  - name: Authentication
    description: Authentication
  - name: Users
    description: User control
  - name: Homestay
    description: Homestay data management
  - name: Reservations
    description: Feature of a homestay reservation
  - name: Homestay Facilities
    description: Feature of a homestay facilities
paths:
####################################
#  AUTHENTICATION
####################################
  /login:
    post:
      tags:
        - Authentication
      summary: Get access to account
      requestBody:
        $ref: '#/components/requestBodies/requestBodyLogin'
      responses:
        '200':
          $ref: '#/components/responses/LoginSuccess'
        '400':
          $ref: '#/components/responses/LoginFailed'
####################################
#  USERS
####################################
  /users:
    post:
      tags:
        - Users
      summary: Create a new account
      requestBody:
        $ref: '#/components/requestBodies/requestBodyCreateUser'
      responses:
        '200':
          $ref: '#/components/responses/CreateUserSuccess'
        '400':
          $ref: '#/components/responses/CreateUserFailed'
  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by id
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/pathParam'
      responses:
        '200':
          $ref: '#/components/responses/GetUserSuccess'
        '400':
          $ref: '#/components/responses/GetUserFailed'
    put:
      tags:
        - Users
      summary: Update user by id
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/pathParam'
      requestBody:
        $ref: '#/components/requestBodies/requestBodyUpdateUser'
      responses:
        '200':
          $ref: '#/components/responses/UpdateUserSuccess'
        '400':
          $ref: '#/components/responses/UpdateUserFailed'
        
    delete:
      tags:
        - Users
      summary: Delete user by id
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/pathParam'
      responses:
        '200':
          $ref: '#/components/responses/DeleteUserSuccess'
        '400':
          $ref: '#/components/responses/DeleteUserFailed'
 ####################################
 #  HOMESTAY
 ####################################
  /homestay:
    post:
      tags:
        - Homestay
      summary: Create a new homestay
      security:
        - JWTAuth: []
      requestBody:
        $ref: '#/components/requestBodies/requestBodyCreateHomestay'
      responses:
        '200':
          $ref: '#/components/responses/CreateHomestaySuccess'
        '400':
          $ref: '#/components/responses/CreateHomestayFailed'
    get:
      tags:
      - Homestay
      summary: Get all homestays
      responses:
        '200':
          $ref: '#/components/responses/GetAllHomestaysSuccess'
        '400':
          $ref: '#/components/responses/GetAllHomestaysFailed'
  /homestay/{id}:
    get:
      tags:
        - Homestay
      summary: Get homestay by id
      parameters:
        - $ref: '#/components/parameters/pathParam'
      responses:
        '200':
          $ref: '#/components/responses/GetHomestaySuccess'
        '400':
          $ref: '#/components/responses/GetHomestayFailed'
    put:
      tags:
        - Homestay
      summary: Update homestay by id
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/pathParam'
      requestBody:
        $ref: '#/components/requestBodies/requestBodyUpdateHomestay'
      responses:
        '200':
          $ref: '#/components/responses/UpdateHomestaySuccess'
        '400':
          $ref: '#/components/responses/UpdateHomestayFailed'
    delete:
      tags:
      - Homestay
      summary: Delete homestay by id
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/pathParam'
      responses:
        '200':
          $ref: '#/components/responses/DeleteHomestaySuccess'
        '400':
          $ref: '#/components/responses/DeleteHomestayFailed'
####################################
#  HOMESTAY FACILITIES
####################################
  /homestay/facilities:
    post:
      tags:
      - Homestay Facilities
      summary: Create a homestay facility
      security:
        - JWTAuth: []
      requestBody:
        $ref: '#/components/requestBodies/requestBodyCreateHomestayFacility'
      responses:
        '200':
          $ref: '#/components/responses/CreateHomestayFacilitySuccess'
        '400':
          $ref: '#/components/responses/CreateHomestayFacilityFailed'
  /homestay/facilities/{id}:
    put:
      tags:
      - Homestay Facilities
      summary: Update homestay facility by id
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/pathParam'
      requestBody:
        $ref: '#/components/requestBodies/requestBodyUpdateHomestayFacility'
      responses:
        '200':
          $ref: '#/components/responses/UpdateHomestayFacilitySuccess'
        '400':
          $ref: '#/components/responses/UpdateHomestayFacilityFailed'      
    delete:
      tags:
        - Homestay Facilities
      summary: Delete homestay facility by id
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/pathParam'
      responses:
        '200':
          $ref: '#/components/responses/DeleteHomestayFacilitySuccess'
        '400':
          $ref: '#/components/responses/DeleteHomestayFacilityFailed'
####################################
#  RESERVATIONS
####################################
  /reservations/check:
    post:
      tags:
        - Reservations
      summary: Check. is homestay available?
      requestBody:
        $ref: '#/components/requestBodies/requestBodyCheckReservation'
      responses:
        '200':
          $ref: '#/components/responses/CheckReservationSuccess'
        '400':
          $ref: '#/components/responses/CheckReservationFailed'
  /reservations:
    post:
      tags:
      - Reservations
      summary: Create a new reservation
      security:
        - JWTAuth: []
      requestBody:
        $ref: '#/components/requestBodies/requestBodyReservation'
      responses:
        '200':
          $ref: '#/components/responses/CreateReservationSuccess'
        '400':
          $ref: '#/components/responses/CreateReservationFailed'
    get:
      tags:
      - Reservations
      summary: Get all reservations
      security:
        - JWTAuth: []
      responses:
        '200':
          $ref: '#/components/responses/GetAllReservationSuccess'
        '400':
          $ref: '#/components/responses/GetAllReservationFailed'
####################################
#  COMPONENTS
####################################
components:
  schemas:
    requestDataLogin:
      type: object
      properties:
        email:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
    requestDataUser:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
    requestDataHomestay:
      type: object
      properties:
        name_homestay:
          type: string
        price:
          type: integer
        description:
          type: string
        address:
          type: string
    requestDataHomestayFacilities:
      type: object
      properties:
        homestay_id:
          type: integer
        facility_id:
          type: integer
    requestDataReservationCheck:
      type: object
      properties:
        homestay_id:
          type: integer
        start_date:
          type: string
        end_date:
          type: string
    requestDataReservation:
      type: object
      properties:
        reservation:
          type: object
          properties:
            homestay_id:
              type: integer
              example: 1
            start_date:
              type: string
              example: "2021-11-30"
            end_date:
              type: string
              example: "2021-12-01"
        credit_card:
          type: object
          properties:
            typ:
              type: string
              example: Master Card
            name:
              type: string
              example: Supriadi
            number:
              type: string
              example: 1000-1000-1000-1000
            cvv:
              type: integer
              example: 10101
            month:
              type: integer
              example: 1
            year:
              type: integer
              example: 21
    responseWithData:
      type: object
      properties:
        Code:
          type: integer
        Message:
          type: string
        Data:
          type: string       
    responseNonData: 
      type: object
      properties:
        Code:
          type: integer
        Message:
          type: string 
  parameters:
    pathParam:
      name: id
      in: path
      required: true
      schema:
        type: integer
        example: 1
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"
  requestBodies:
    requestBodyLogin:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/requestDataLogin'
          examples:
            user1:
              value:
                email: supriadi15001@gmail.com
                password: qwerty
            user2:
              value:
                email: sahrilmahendra@gmail.com
                password: qwerty
            user3:
              value:
                email: nurilhuda7337@gmail.com
                password: qwerty
    requestBodyCreateUser:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/requestDataUser'
          examples:
            newUser1:
              value:
                name: Nuril Huda
                email: nurilhuda7337@gmail.com
                password: qwerty
            newUser2:
              value:
                name: Supriadi
                email: supriadi15001@gmail.com
                password: qwerty
            newUser3:
              value:
                name: Sahril Mahendra
                email: sahrilmahendra@gmail.com
                password: qwerty
    requestBodyUpdateUser:
      required: true
      content:
        application/json:
          schema:  
            $ref: '#/components/schemas/requestDataUser'
          examples:
            newData1:
              value:
                name: Sahril Real
                email: sahrilasli@gmail.com
                password: rahasia
            newData2:
              value:
                name: Nuriel Noah
                email: nurielnoah@gmail.com
                password: saudaranyaarielnoah
            newData3:
              value:
                name: New Supriadi
                email: supriadinew@gmail.com
                password: newpass
    requestBodyCreateHomestay:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/requestDataHomestay'
          example:
            name_homestay: Rumah Jendela
            price: 1300000
            description: We serve the best our place for your satisfaction
            address: Dago Atas, Bandung
    requestBodyUpdateHomestay:
      required: true
      content:
        application/json:
          schema:  
            $ref: '#/components/schemas/requestDataHomestay'
          example:
            name_homestay: Rumah Kaca
            price: 1500000
            description: Cool and fresh. Wuuush..
            address: Lembang, Bandung
    requestBodyCreateHomestayFacility:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/requestDataHomestayFacilities'
          example:
            homestay_id: 1
            facility_id: 1
    requestBodyUpdateHomestayFacility:
      required: true
      content:
        application/json:
          schema:  
            $ref: '#/components/schemas/requestDataHomestayFacilities'
          example:
            homestay_id: 2
            facility_id: 2
    requestBodyCheckReservation:
      required: true
      content:
        application/json:
          schema:  
            $ref: '#/components/schemas/requestDataReservationCheck'
          example:
            homestay_id: 1
            start_date: "2021-11-30"
            end_date: "2021-12-01"
    requestBodyReservation: 
      required: true
      content:
        application/json:
          schema:  
            $ref: '#/components/schemas/requestDataReservation'
  responses:
    LoginSuccess:
      description: Login Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseWithData'
          example:
            Code: 200
            Message: Login Success
            Data: {
              ID: 1,
              Name: Supriadi,
              Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2MzgxOTUwMDksInVzZXJJZCI6MX0.0gso_gffYqaDGmCTqYClvhaNZZdbe7FbV7hJ02lOpoQ
            }
    LoginFailed:
      description: Login Failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 400 
            Message: Email or Password Incorrect
    CreateUserSuccess:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 200
            Message: Success Operation
    CreateUserFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 400
            Message: Bad Request
    GetUserSuccess:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseWithData'
          example:
            Code: 200
            Message: Success Operation
            Data: {
              ID: 1,
              Name: Supriadi,
              Email: supriadi15000@gmail.com
            }
    GetUserFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Invalid Id:
              description: Id is invalid
              value:
                Code: 400
                Message: Invalid Id
            Data Not Found:
              description: User is not found
              value:
                Code: 400
                Message: Data Not Found
            Bad Request:
              value:
                Code: 400
                Message: Bad Request
    UpdateUserSuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 200
            Message: Success Operation
    UpdateUserFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Invalid Id:
              description: Id is invalid
              value:
                Code: 400
                Message: Invalid Id
            Data Not Found:
              description: User is not found
              value:
                Code: 400
                Message: Data Not Found
            Access Forbidden:
              value:
                Code: 400
                Message: Access Forbidden
            Bad Request:
              value:
                Code: 400
                Message: Bad Request
    DeleteUserSuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 200
            Message: Success Operation
    DeleteUserFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Invalid Id:
              description: Id is invalid
              value:
                Code: 400
                Message: Invalid Id
            Data Not Found:
              description: User is not found
              value:
                Code: 400
                Message: Data Not Found
            Access Forbidden:
              value:
                Code: 400
                Message: Access Forbidden
    CreateHomestaySuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 200
            Message: Success Operation
    CreateHomestayFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 400
            Message: Bad Request
    GetAllHomestaysSuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseWithData'
          example:
            Code: 200
            Message: Success Operation
            Data: [
                { ID: 1,
                Name_Homestay: Rumah Jendela,
                Price: 1300000,
                Description: We serve the best our place for your satisfaction,
                Address: "Dago, Bandung",
                Latitude: -6.877258,
                Longitude: 107.617412,
                UsersID: 1},
                { ID: 2,
                Name_Homestay: Rumah Kaca,
                Price: 1500000,
                Description: Fresh and cool. Wuuush..,
                Address: "Lembang, Bandung",
                Latitude: -6.877258,
                Longitude: 107.617412,
                UsersID: 1}
            ]
    GetAllHomestaysFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Data Not Found:
              value:
                Code: 400
                Message: Data Not Found
            Bad Request:
              value:
                Code: 400
                Message: Bad Request
    GetHomestaySuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseWithData'
          example:
            Code: 200
            Message: Success Operation
            Data: { 
                ID: 1,
                Name_Homestay: Rumah Jendela,
                Price: 1300000,
                Description: We serve the best our place for your satisfaction,
                Address: "Dago, Bandung",
                Latitude: -6.877258,
                Longitude: 107.617412,
                UsersID: 1
            }
    GetHomestayFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Invalid Id:
              value:
                Code: 400
                Message: Invalid Id
            Data Not Found:
              value:
                Code: 400
                Message: Data Not Found
            Bad Request:
              value:
                Code: 400
                Message: Bad Request
    UpdateHomestaySuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 200
            Message: Success Operation
    UpdateHomestayFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Invalid Id:
              value:
                Code: 400
                Message: Invalid Id
            Data Not Found:
              value:
                Code: 400
                Message: Data Not Found
            Access Forbidden:
              value:
                Code: 400
                Message: Access Forbidden
            Bad Request:
              value:
                Code: 400
                Message: Bad Request
    DeleteHomestaySuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 200
            Message: Success Operation
    DeleteHomestayFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Invalid Id:
              value:
                Code: 400
                Message: Invalid Id
            Data Not Found:
              value:
                Code: 400
                Message: Data Not Found
            Access Forbidden:
              value:
                Code: 400
                Message: Access Forbidden
    CreateHomestayFacilitySuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 200
            Message: Success Operation
    CreateHomestayFacilityFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 400
            Message: Bad Request
    UpdateHomestayFacilitySuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 200
            Message: Success Operation
    UpdateHomestayFacilityFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Invalid Id:
              value:
                Code: 400
                Message: Invalid Id
            Data Not Found:
              value:
                Code: 400
                Message: Data Not Found
            Bad Request:
              value:
                Code: 400
                Message: Bad Request
    DeleteHomestayFacilitySuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 200
            Message: Success Operation
    DeleteHomestayFacilityFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Invalid Id:
              value:
                Code: 400
                Message: Invalid Id
            Access Forbidden:
              value:
                Code: 400
                Message: Access Forbidden
    CheckReservationSuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Available:
              value:
                Code: 200
                Message: Success Operation
                Data: Available
            Not Available:
              value:
                Code: 200
                Message: Success Operation
                Data: Not Available
    CheckReservationFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Invalid Date:
              value:
                Code: 400
                Message: Invalid Date
            Data Not Found:
              value:
                Code: 400
                Message: Data Not Found
            Bad Request:
              value:
                Code: 400
                Message: Bad Request
    CreateReservationSuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          example:
            Code: 200
            Message: Success Operation
    CreateReservationFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Invalid Date:
              value:
                Code: 400
                Message: Invalid Date
            Data Not Found:
              value:
                Code: 400
                Message: Data Not Found
            Bad Request:
              value:
                Code: 400
                Message: Bad Request
            Access Forbidden:
              value:
                Code: 400
                Message: Access Forbidden
            Not Available:
              value:
                Code: 400
                Message: Not Available
    GetAllReservationSuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseWithData'
          example:
            Code: 200
            Message: Success Operation
            Data: [{
              UserID: 1,
              HomestayID: 1,
              Name_Homestay: Rumah Jendela,
              Start_date: "2021-11-30",
              End_date: "2021-13-01",
              Price: 1300000,
              Total_harga: 2600000
              },
              {
                UserID: 1,
                HomestayID: 2,
                Name_Homestay: Rumah Kaca,
                Start_date: "2021-11-30",
                End_date: "2021-13-01",
                Price: 1500000,
                Total_harga: 3000000,
              }            
            ]
    GetAllReservationFailed:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseNonData'
          examples:
            Data Not Found:
              value:
                Code: 400
                Message: Data Not Found
            Bad Request:
              value:
                Code: 400
                Message: Bad Request

  